buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'

version = file('../version.txt').text.trim()+file('version-suffix.txt').text.trim()
group= "com.unascribed.ears" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "ears-forge-1.7"

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

minecraft {
	version = "1.7.10-10.13.4.1614-1.7.10"
	runDir = "run"
	mappings = "stable_12"
	replaceIn 'src/main/java/com/unascribed/ears/Ears.java'
	replace '@VERSION@', project.version
}

jar {
	manifest {
		attributes (
			'FMLCorePlugin': 'com.unascribed.ears.common.agent.OldForgeCoremod',
			'FMLCorePluginContainsFMLMod': true
		)
	}
}

dependencies {
	compile files('../common/build/libs/ears-common-agent-legacy.jar')
}

jar {
	from zipTree('../common/build/libs/ears-common-agent-legacy.jar')
}

processResources {
	// this will ensure that this task is redone when the versions change.
	inputs.property "version", project.version
	inputs.property "mcversion", project.minecraft.version

	// replace stuff in mcmod.info, nothing else
	from(sourceSets.main.resources.srcDirs) {
		include 'mcmod.info'

		// replace version and mcversion
		expand 'version':project.version, 'mcversion':project.minecraft.version
	}

	// copy everything else, thats not the mcmod.info
	from(sourceSets.main.resources.srcDirs) {
		exclude 'mcmod.info'
	}
}

compileJava.doFirst {
	'../common/replace-version.sh src/main/java/com/unascribed/ears/EarsPlatformVersion.java'.execute()
}
