plugins {
	id 'com.matthewprenger.cursegradle' version '1.4.0'
}

def target = project.getProperty("target")
def version = file('../version.txt').text.trim()+file("../platform-${target}/version-suffix.txt").text.trim()

def prefix = ""
def artifact = "../platform-${target}/build/libs/ears-${target}-${version}.jar"
def stability = ""
def gameVersions = []
def requires = []
def conflicts = []

switch (target) {
	case "fabric-1.8":
		prefix = "FABRIC 1.8"
		stability = 'beta'
		gameVersions = ['Fabric', '1.8.9']
		break
	case "fabric-1.14":
		prefix = "FABRIC 1.14"
		stability = 'release'
		gameVersions = ['Fabric', '1.14', '1.14.1', '1.14.2', '1.14.3', '1.14.4']
		break
	case "fabric-1.16":
		prefix = "FABRIC 1.15/16"
		stability = 'release'
		gameVersions = ['Fabric', '1.15', '1.15.1', '1.15.2', '1.16', '1.16.1', '1.16.2', '1.16.3', '1.16.4', '1.16.5']
		break
	case "fabric-1.17":
		prefix = "FABRIC 1.17/18"
		stability = 'release'
		gameVersions = ['Fabric', '1.17', '1.17.1', '1.18', '1.18.1']
		break
	case "fabric-1.19":
		prefix = "FABRIC 1.19"
		stability = 'release'
		gameVersions = ['Fabric', '1.19', '1.19.1', '1.19.2']
		break
	case "fabric-1.19.3":
		prefix = "FABRIC 1.19.3"
		stability = 'release'
		gameVersions = ['Fabric', '1.19.3']
		break
	case "fabric-1.19.4":
		prefix = "FABRIC 1.19.4"
		stability = 'release'
		gameVersions = ['Fabric', '1.19.4']
		break
	case "fabric-1.20":
		prefix = "FABRIC 1.20"
		stability = 'release'
		gameVersions = ['Fabric', '1.20', '1.20.1']
		break
	case "fabric-1.20.2":
		prefix = "FABRIC 1.20.2"
		stability = 'release'
		gameVersions = ['Fabric', '1.20.2']
		break
	case "forge-1.2":
		prefix = "FORGE 1.2"
		stability = 'beta'
		gameVersions = ['Forge', '1.2.5']
		conflicts = ['lumy-skin-patch']
		break
	case "forge-1.4":
		prefix = "FORGE 1.4"
		stability = 'beta'
		gameVersions = ['Forge', '1.4.7']
		conflicts = ['lumy-skin-patch']
		break
	case "forge-1.5":
		prefix = "FORGE 1.5"
		stability = 'beta'
		gameVersions = ['Forge', '1.5.2']
		conflicts = ['lumy-skin-patch']
		break
	case "forge-1.6":
		prefix = "FORGE 1.6"
		stability = 'beta'
		gameVersions = ['Forge', '1.6.4']
		conflicts = ['lumy-skin-patch']
		break
	case "forge-1.7":
		prefix = "FORGE 1.7"
		stability = 'release'
		gameVersions = ['Forge', '1.7.10']
		conflicts = ['skinport', 'lumy-skin-patch']
		break
	case "forge-1.8":
		prefix = "FORGE 1.8"
		stability = 'release'
		gameVersions = ['Forge', '1.8.9']
		break
	case "forge-1.9":
		prefix = "FORGE 1.9/10/11"
		stability = 'release'
		gameVersions = ['Forge', '1.9.4', '1.10.2', '1.11.2']
		break
	case "forge-1.12":
		prefix = "FORGE 1.12"
		stability = 'release'
		gameVersions = ['Forge', '1.12.2']
		break
	case "forge-1.14":
		prefix = "FORGE 1.14"
		stability = 'beta'
		requires = ['mixinbootstrap']
		gameVersions = ['Forge', '1.14', '1.14.1', '1.14.2', '1.14.3', '1.14.4']
		break
	case "forge-1.15":
		prefix = "FORGE 1.15"
		stability = 'beta'
		requires = ['mixinbootstrap']
		gameVersions = ['Forge', '1.15', '1.15.1', '1.15.2']
		break
	case "forge-1.16":
		prefix = "FORGE 1.16"
		stability = 'beta'
		gameVersions = ['Forge', '1.16', '1.16.1', '1.16.2', '1.16.3', '1.16.4', '1.16.5']
		break
	case "forge-1.17":
		prefix = "FORGE 1.17"
		stability = 'beta'
		gameVersions = ['Forge', '1.17', '1.17.1']
		break
	case "forge-1.18":
		prefix = "FORGE 1.18"
		stability = 'beta'
		gameVersions = ['Forge', '1.18', '1.18.1']
		break
	case "forge-1.19":
		prefix = "FORGE 1.19"
		stability = 'beta'
		gameVersions = ['Forge', '1.19']
		break
	case "forge-1.19.3":
		prefix = "FORGE 1.19.3"
		stability = 'beta'
		gameVersions = ['Forge', '1.19.3']
		break
	case "forge-1.19.4":
		prefix = "FORGE 1.19.4"
		stability = 'beta'
		gameVersions = ['Forge', '1.19.4']
		break
	case "rift-1.13":
		prefix = "RIFT 1.13.2"
		stability = 'alpha'
		gameVersions = ['Rift', '1.13.2']
		break
	default:
		throw new Exception("Unknown target ${target}")
}

curseforge {
	apiKey = project.getProperty("curseApiKey")
	project {
		id = '412013'
		changelogType = 'html'
		changelog = file('../changelog.html')

		releaseType = stability
		gameVersions.each { addGameVersion(it) }
		
		mainArtifact(file(artifact)) {
			displayName = "[${prefix}] Ears v${version}"

			// it is an error to open this section and not set any relations
			if (!conflicts.isEmpty() || !requires.isEmpty()) {
				relations {
					conflicts.each { incompatible(it) }
					requires.each { requiredDependency(it) }
				}
			}
		}
	}
	options {
		javaVersionAutoDetect = false
//		debug = true
	}
}

task build {}
task assemble {}
