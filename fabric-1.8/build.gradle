plugins {
	id 'fabric-loom' version '0.4-SNAPSHOT'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = file('../version.txt').text.trim()+file('version-suffix.txt').text.trim()
group = project.maven_group

repositories {
	mavenCentral()
	jcenter()
	maven {
		name = 'Fabric'
		url = 'https://maven.fabricmc.net/'
	}
	maven {
		name = 'SpongePowered'
		url = 'https://repo.spongepowered.org/maven'
	}
	maven {
		name = 'mojang'
		url = 'https://libraries.minecraft.net/'
	}
	maven {
		name = "legacy-fabric"
		url = "https://maven.legacyfabric.net"
	}
}

minecraft {
	// Comment out this block if you're using Chocoloom
	intermediaryUrl = {
		return "https://maven.legacyfabric.net/net/fabricmc/intermediary/" + it + "/intermediary-" + it + "-v2.jar";
	}
}

dependencies {
	implementation "com.google.guava:guava:23.5-jre"
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation ("net.fabricmc:fabric-loader-1.8.9:${project.loader_version}") {
		exclude module: "guava"
	}
	
	implementation files('../common/build/libs/ears-common-mixin-legacy.jar')
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "../LICENSE"
	from zipTree('../common/build/libs/ears-common-mixin-legacy.jar')
}

compileJava.doFirst {
	'../common/replace-version.sh src/main/java/com/unascribed/ears/EarsPlatformVersion.java'.execute()
}
